{"version":3,"sources":["webpack:///webpack/bootstrap 2d4dc25c081f47324c52","webpack:///./lib/game.js","webpack:///./lib/boot.js","webpack:///./lib/load.js","webpack:///./lib/play.js","webpack:///./lib/win.js","webpack:///./lib/lose.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AClBA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACbA;;AAEA;AACA;AACA,0GAA+D,oCAAoC;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;;;;;;;;;AC/BA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrSA;;AAEA;AACA;;AAEA,qBAAqB;AACrB;;AAEA;AACA;;;AAGA;;;;;;;;;ACZA;;AAEA;AACA;AACA;;AAEA,iBAAiB;AACjB;;;AAGA;AACA;;;;;AAKA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2d4dc25c081f47324c52","import bootState from './boot';\nimport loadState from './load';\nimport playState from './play';\nimport winState from './win';\nimport loseState from './lose';\n\nvar mygame = new Phaser.Game(800, 600, Phaser.AUTO);\n\n\n\nmygame.state.add('boot', bootState);\nmygame.state.add('load', loadState);\nmygame.state.add('play', playState);\nmygame.state.add('win', winState);\nmygame.state.add('lose', loseState);\n\nmygame.state.start('boot');\n\nexport default mygame;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","import  mygame  from './game.js';\n\n\nvar bootState = {\n\n  create() {\n\n    mygame.physics.startSystem(Phaser.Physics.ARCADE);\n\n     mygame.state.start('load');\n  }\n};\n\nexport default bootState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/boot.js\n// module id = 1\n// module chunks = 0","import  mygame  from './game.js';\n\nvar loadState = {\n  preload: function() {\n    var loadingLabel = mygame.add.text(80, 150, 'loading...', {font: '30px Arial', fill: '#ffffff'})\n\n    mygame.load.image('sky', 'assets/sky.jpg');\n    mygame.load.image('ground', 'assets/platform.png');\n    mygame.load.image('diamond', 'assets/diamond.png');\n    mygame.load.image('star', 'assets/star.png');\n    mygame.load.image('firstaid', 'assets/firstaid.png');\n    mygame.load.image('atari', 'assets/atari800.png');\n    mygame.load.image('book1', 'assets/book1.png');\n    mygame.load.image('book2', 'assets/book2.png');\n    mygame.load.image('book3', 'assets/book3.png');\n    mygame.load.image('turkey', 'assets/turkey.png');\n    mygame.load.image('table1', 'assets/table1.png');\n    mygame.load.image('bbq', 'assets/bbq.png');\n    mygame.load.image('icecream', 'assets/icecream.png');\n    mygame.load.spritesheet('katamari', 'assets/katamari.png', 35, 37);\n    mygame.load.spritesheet('prince', 'assets/the_prince.png', 19, 35);\n    mygame.load.spritesheet('baddie', 'assets/baddie.png', 32, 32);\n//\n  },\n\n  create: function () {\n\n    mygame.state.start('play');\n  }\n};\n\nexport default loadState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/load.js\n// module id = 2\n// module chunks = 0","import  mygame  from './game.js';\n\n\nvar katamari;\nvar platforms;\nvar ground;\nvar cursors;\nvar  katamari_jump;\nvar clump;\nvar itemGroup;\nvar items;\nvar piggy;\nvar piggyVel = 40;\nvar timer;\nvar timerEvent;\n//\n//\nvar playState = {\n  create:  function() {\n    initEnvironment();\n    katamari = initKatamari();\n    mygame.camera.follow(katamari);\n\n   clump = mygame.add.group();\n   itemGroup = mygame.add.group();\n\n   initItems();\n   cursors = mygame.input.keyboard.createCursorKeys();\n\n   timer = mygame.time.create();\n   timerEvent = timer.add(Phaser.Timer.MINUTE * 1 + Phaser.Timer.SECOND * 0, this.endTimer, this);\n   timer.start();\n\n },\n\n\n  update: function() {\n    mygame.physics.arcade.overlap(katamari, itemGroup, rescale, null, this);\n    mygame.physics.arcade.collide(katamari, platforms);\n    mygame.physics.arcade.collide(itemGroup, platforms);\n    mygame.physics.arcade.collide(clump, platforms);\n    mygame.physics.arcade.collide(piggy, platforms);\n\n    katamari.body.velocity.x = 0;\n    handleCursor();\n\n    for (let i =0; i<items.length; i++) {\n      var item = items[i];\n\n\n      if (checkOverlap(katamari, item))\n      {\n        if (item.scale.x <= katamari.scale.x * .7) {\n          clump.add(item);\n          clump.set(item,'body.x', katamari.x + katamari.width/2 + item.scaleFact/2);\n          clump.set(item,'body.y', katamari.y + katamari.height/2);\n        } else {\n          //\n        }\n      }\n    }\n    piggy.body.velocity.x = piggyVel;\n\n    if (piggy.body.x>=1250){\n      piggyVel = -40;\n      piggy.scale.x *= -1;\n\n    }\n    if (piggy.body.x <=280) {\n      piggyVel = 40;\n      piggy.scale.x *= -1;\n    }\n\n    if (checkOverlap(katamari, piggy)) {\n      // piggy.animations.stop(null, true);\n      clump.add(piggy);\n      clump.set(piggy,'body.x', katamari.x + katamari.width/2);\n      clump.set(piggy,'body.y', katamari.y + katamari.height/2);\n    }\n  },\n\n    render: function () {\n          // If our timer is running, show the time in a nicely formatted way, else show 'Done!'\n          if (timer.running) {\n              mygame.debug.text(this.formatTime(Math.round((timerEvent.delay - timer.ms) / 1000)), 2, 14, \"#ff0\");\n          }\n          else {\n              mygame.debug.text(\"Time's Up!\", 2, 14, \"#0f0\");\n\n              if (katamari.scale.x >= 8) {\n                mygame.state.start('win');\n              } else {\n                mygame.state.start('lose');\n              }\n          }\n      },\n      endTimer: function() {\n          // Stop the timer when the delayed event triggers\n          timer.stop();\n      },\n      formatTime: function(s) {\n          // Convert seconds (s) to a nicely formatted and padded time string\n          var minutes = \"0\" + Math.floor(s / 60);\n          var seconds = \"0\" + (s - minutes * 60);\n          return minutes.substr(-2) + \":\" + seconds.substr(-2);\n      }\n\n\n};\n\nfunction initKatamari() {\n  katamari = new Unit(mygame, 32, mygame.world.height - 150, 'katamari');\n  mygame.add.existing(katamari);\n  mygame.physics.arcade.enable(katamari);\n\n  katamari.body.bounce.y = 0.2;\n  katamari.body.gravity.y = 500;\n  katamari.body.collideWorldBounds = true;\n\n  katamari.animations.add('left', [0, 1, 2], 10, true);\n  katamari.animations.add('right', [4, 5, 6], 10, true);\n\n  katamari_jump = -250;\n  return katamari;\n\n}\n\nfunction initEnvironment() {\n\n      mygame.world.setBounds(0, 0, 3840, 800);\n      mygame.add.tileSprite(0, 0, 3840, 1200, 'sky');\n      platforms = mygame.add.group();\n      platforms.enableBody = true;\n      ground = platforms.create(0, mygame.world.height - 64, 'ground');\n      ground.scale.setTo(50, 2);\n      ground.body.immovable = true;\n      var ledge = platforms.create(1800, 600, 'ground');\n      ledge.body.immovable = true;\n      ledge = platforms.create(200, 400, 'ground');\n      ledge.scale.setTo(3, 1);\n      ledge.body.immovable = true;\n\n      var bbq = platforms.create(1710, 670, 'bbq');\n      bbq.scale.setTo(1.7, 1.7);\n      bbq.body.immovable = true;\n\n      var table = platforms.create(2290, 690, 'table1');\n      table.scale.setTo(1.7, 1.7);\n      table.body.immovable = true;\n\n\n\n}\n\nfunction initItems() {\n  var arr = ['star', 'diamond', 'prince', 'firstaid'];\n  items = [];\n\n  for (var i = 300; i <500 ; i+=30) {\n    var item = mygame.add.sprite( i, mygame.world.height - 100, 'diamond');\n    items.push(item);\n    mygame.physics.arcade.enable(item);\n  }\n\n\n  var prince = mygame.add.sprite( 0, mygame.world.height - 100, 'prince');\n  items.push(prince);\n  mygame.physics.arcade.enable(prince);\n\n  var turkey = mygame.add.sprite( 1725, 640, 'turkey');\n  items.push(turkey);\n  mygame.physics.arcade.enable(turkey);\n  turkey.scale.setTo(1.5, 1.5);\n\n\n  var icecream = mygame.add.sprite( 2280, 690, 'icecream');\n  items.push(icecream);\n  mygame.physics.arcade.enable(icecream);\n  icecream.scale.setTo(1.2, 1.2);\n\n  for (var i = 0; i < 6; i+=1) {\n    var firstaid = mygame.add.sprite( 1800+(i*60), 570, 'firstaid');\n    items.push(firstaid);\n    mygame.physics.arcade.enable(firstaid);\n    firstaid.body.gravity.y = 350;\n  }\n\n  for (var i = 0; i < 6; i+=1) {\n    var star = mygame.add.sprite( 700+(i*150), 600, 'star');\n    items.push(star);\n    mygame.physics.arcade.enable(star);\n  }\n//   // for (var i = 800; i < 5000; i+=50) {\n//   //   var rand = arr[Math.floor(Math.random() * arr.length)];\n//   //   var item = mygame.add.sprite( i, mygame.world.height - 100, rand);\n//   //\n//   //   if (rand === 'baddie') {\n//   //     item.frame = 2;\n//   //   }\n//   //\n//   //   items.push(item);\n//   //   mygame.physics.arcade.enable(item);\n//   // }\n//\n  for ( i=0; i<items.length; i++) {\n    item = items[i];\n    item.scaleFact = mygame.rnd.realInRange(0, 50);\n    item.rotation = katamari.body.angle;\n\n    itemGroup.add(item);\n  }\n\n  piggy = mygame.add.sprite(400, 300, 'baddie');\n  piggy.scale.setTo(3,3);\n  mygame.physics.arcade.enable(piggy);\n  // itemGroup.add(piggy);\n  piggy.body.gravity.y = 350;\n  piggy.body.collideWorldBounds = true;\n  piggy.animations.add('left', [2, 3], 3, true);\n  piggy.animations.add('right', [0, 1], 3, true);\n  piggy.animations.play('left');\n}\n\nfunction handleCursor() {\n  for (let i =0; i<items.length; i++) {\n  var y = items[i];\n    if (cursors.right.isDown && checkOverlap(katamari, y)) {\n      y.pivot.x = (katamari.width * (mygame.rnd.realInRange(2, 7)*0.1));\n      y.rotation += .03;\n    }\n\n    if (cursors.left.isDown && checkOverlap(katamari, y)) {\n      y.pivot.x = (katamari.width * (mygame.rnd.realInRange(2, 7)*0.1));\n      y.rotation -= .03;\n    }\n\n  }\n\n  if (cursors.left.isDown){\n      //  Move to the left\n      katamari.body.velocity.x = -150;\n      katamari.animations.play('left');\n  }\n  else if (cursors.right.isDown){\n      //  Move to the right\n      katamari.body.velocity.x = 150;\n      katamari.animations.play('right');\n  }\n  else{\n      //  Stand still\n      katamari.animations.stop();\n      katamari.frame = 3;\n  }\n\n  //  Allow the katamari to jump if they are touching the ground.\n  if (cursors.up.isDown && katamari.body.touching.down){\n      katamari.body.velocity.y = katamari_jump;\n  }\n\n\n\n}\n\nfunction rescale(katamari, item) {\n  katamari.body.velocity.y = -150;\n  katamari.scale.setTo(katamari.scale.x * (1 + (item.width/2000)), katamari.scale.y *\n                                                            (1 + (item.width/2000)));\n  item.scale.setTo(.7, .7);\n  katamari_jump -=1.5;\n\n  if (katamari.scale.x > 8) {\n    katamari.scale.setTo(8, 8);\n  }\n}\n\nfunction checkOverlap(spriteA, spriteB) {\n\nvar boundsA = spriteA.getBounds();\nvar boundsB = spriteB.getBounds();\n\nreturn Phaser.Rectangle.intersects(boundsA, boundsB);\n\n}\n\n\n\nfunction Unit(mygame, x, y, spriteName) {\n\tPhaser.Sprite.call(this, mygame, x, y, spriteName);\n\t// base unit stuff goes here\n}\nUnit.prototype = Object.create(Phaser.Sprite.prototype);\nUnit.prototype.constructor = Unit;\n//\nexport default playState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/play.js\n// module id = 3\n// module chunks = 0","import  mygame  from './game.js';\n\nvar winState = {\n  create: function(){\n\n        var style = { font: \"bold 32px Arial\", fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };\n        var text = mygame.add.text(350, 300, \"YOU WIN!\", style);\n\n  }\n};\n\n\nexport default winState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/win.js\n// module id = 4\n// module chunks = 0","import  mygame  from './game.js';\n\nvar loseState = {\n  create: function(){\n    console.log('you lose')\n\n    var style = { font: \"bold 32px Arial\", fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };\n    var text = mygame.add.text(350, 300, \"YOU LOSE!\", style);\n\n\n  }\n};\n\n\n\n\nexport default loseState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/lose.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}
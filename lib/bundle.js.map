{"version":3,"sources":["webpack:///webpack/bootstrap abf3385290f77881ba8c","webpack:///./lib/game.js","webpack:///./lib/boot.js","webpack:///./lib/load.js","webpack:///./lib/play.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;ACjBA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACbA;;AAEA;AACA;AACA,0GAA+D,oCAAoC;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACxBA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap abf3385290f77881ba8c","import bootState from './boot';\nimport loadState from './load';\nimport playState from './play';\n\n\nvar mygame = new Phaser.Game(800, 600, Phaser.AUTO);\n\n\n\nmygame.state.add('boot', bootState);\nmygame.state.add('load', loadState);\nmygame.state.add('play', playState);\n// mygame.state.add('win', winState);\n\n\nmygame.state.start('boot');\n\nexport default mygame;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","import  mygame  from './game.js';\n\n\nvar bootState = {\n\n  create() {\n    // this.game = game;\n    mygame.physics.startSystem(Phaser.Physics.ARCADE);\n\n     mygame.state.start('load');\n  }\n};\n\nexport default bootState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/boot.js\n// module id = 1\n// module chunks = 0","import  mygame  from './game.js';\n\nvar loadState = {\n  preload: function() {\n    var loadingLabel = mygame.add.text(80, 150, 'loading...', {font: '30px Arial', fill: '#ffffff'})\n\n    mygame.load.image('sky', 'assets/sky.png');\n    mygame.load.image('ground', 'assets/platform.png');\n    mygame.load.image('diamond', 'assets/diamond.png');\n    mygame.load.image('star', 'assets/star.png');\n    mygame.load.image('firstaid', 'assets/firstaid.png');\n    mygame.load.image('atari', 'assets/atari800.png');\n    mygame.load.spritesheet('katamari', 'assets/katamari.png', 35, 37);\n    mygame.load.spritesheet('prince', 'assets/the_prince.png', 19, 35);\n    mygame.load.spritesheet('baddie', 'assets/baddie.png', 32, 32, 4);\n    mygame.load.spritesheet('items1', 'assets/items1.png', 34, 34);\n  },\n\n  create: function () {\n\n    mygame.state.start('play');\n  }\n};\n\nexport default loadState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/load.js\n// module id = 2\n// module chunks = 0","import  mygame  from './game.js';\n\n\nvar katamari;\nvar platforms;\nvar ground;\nvar cursors;\nvar clump;\nvar itemGroup;\nvar items;\n\n\nvar playState = {\n  create:  function() {\n    initEnvironment();\n    katamari = initKatamari();\n    mygame.camera.follow(katamari);\n\n\n   clump = mygame.add.group();\n   itemGroup = mygame.add.group();\n\n   initItems();\n   cursors = mygame.input.keyboard.createCursorKeys();\n\n },\n\n\n  update: function() {\n    mygame.physics.arcade.overlap(katamari, itemGroup, rescale, null, this);\n    mygame.physics.arcade.collide(katamari, platforms);\n    mygame.physics.arcade.collide(clump, platforms);\n\n    katamari.body.velocity.x = 0;\n    handleCursor();\n\n    for (let i =0; i<items.length; i++) {\n      var item = items[i];\n\n\n      if (checkOverlap(katamari, item))\n      {\n        clump.add(item);\n        clump.set(item,'body.x', katamari.x + katamari.width/2 + item.scaleFact/2);\n        clump.set(item,'body.y', katamari.y + katamari.height/2);\n      }\n    }\n  }\n};\n\nfunction initKatamari() {\n  katamari = new Unit(mygame, 32, mygame.world.height - 150, 'katamari');\n  mygame.add.existing(katamari);\n  mygame.physics.arcade.enable(katamari);\n\n  katamari.body.bounce.y = 0.2;\n  katamari.body.gravity.y = 500;\n  katamari.body.collideWorldBounds = true;\n\n  katamari.animations.add('left', [0, 1, 2], 10, true);\n  katamari.animations.add('right', [4, 5, 6], 10, true);\n\n\n  return katamari;\n\n}\n\nfunction initEnvironment() {\n\n\n      mygame.add.tileSprite(0, 0, 3840, 600, 'sky');\n      platforms = mygame.add.group();\n      platforms.enableBody = true;\n      ground = platforms.create(0, mygame.world.height - 64, 'ground');\n      ground.scale.setTo(50, 2);\n      ground.body.immovable = true;\n      mygame.world.setBounds(0, 0, 3840, 600);\n\n}\n\nfunction initItems() {\n  var arr = ['star', 'diamond', 'prince', 'firstaid', 'baddie'];\n  items = [];\n  for (var i = 0; i < 96; i++) {\n    var rand = arr[Math.floor(Math.random() * arr.length)];\n    var item = mygame.add.sprite((4*i) * 10, mygame.world.height - 100, rand);\n\n    if (rand === 'baddie') {\n      item.frame = 2;\n    }\n\n    items.push(item);\n    mygame.physics.arcade.enable(item);\n  }\n\n  for ( i=0; i<items.length; i++) {\n    item = items[i];\n    item.scaleFact = mygame.rnd.realInRange(0, 50);\n    item.rotation = katamari.body.angle;\n\n    itemGroup.add(item);\n  }\n}\n\nfunction handleCursor() {\n  for (let i =0; i<items.length; i++) {\n  var y = items[i];\n    if (cursors.right.isDown && checkOverlap(katamari, y)) {\n      y.pivot.x = (katamari.width * (mygame.rnd.realInRange(2, 7)*0.1));\n      y.rotation += .03;\n    }\n\n    if (cursors.left.isDown && checkOverlap(katamari, y)) {\n      y.pivot.x = (katamari.width * (mygame.rnd.realInRange(2, 7)*0.1));\n      y.rotation -= .03;\n    }\n\n  }\n\n  if (cursors.left.isDown){\n      //  Move to the left\n      katamari.body.velocity.x = -150;\n      katamari.animations.play('left');\n  }\n  else if (cursors.right.isDown){\n      //  Move to the right\n      katamari.body.velocity.x = 150;\n      katamari.animations.play('right');\n  }\n  else{\n      //  Stand still\n      katamari.animations.stop();\n      katamari.frame = 3;\n  }\n\n  //  Allow the katamari to jump if they are touching the ground.\n  if (cursors.up.isDown && katamari.body.touching.down){\n      katamari.body.velocity.y = -250;\n  }\n\n\n\n}\n\nfunction rescale(katamari, item) {\n  katamari.body.velocity.y = -150;\n  katamari.scale.setTo(katamari.scale.x * (1 + (item.width/1000)), katamari.scale.y *\n                                                            (1 + (item.width/1000)));\n  item.scale.setTo(.7, .7);\n\n  if (katamari.scale.x > 8) {\n    katamari.scale.setTo(8, 8);\n  }\n}\n\nfunction checkOverlap(spriteA, spriteB) {\n\nvar boundsA = spriteA.getBounds();\nvar boundsB = spriteB.getBounds();\n\nreturn Phaser.Rectangle.intersects(boundsA, boundsB);\n\n}\n\n\n\nfunction Unit(mygame, x, y, spriteName) {\n\tPhaser.Sprite.call(this, mygame, x, y, spriteName);\n\t// base unit stuff goes here\n}\nUnit.prototype = Object.create(Phaser.Sprite.prototype);\nUnit.prototype.constructor = Unit;\n\nexport default playState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/play.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}